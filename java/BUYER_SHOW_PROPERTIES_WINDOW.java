/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.plaf.basic.BasicHTML;

/**
 *
 * @author Mudit
 */
public class BUYER_SHOW_PROPERTIES_WINDOW extends javax.swing.JFrame {
    int buyerid;
        //private int P_Id;
    /**
     * Creates new form BUYER_SHOW_PROPERTIES_WINDOW
     */
    public BUYER_SHOW_PROPERTIES_WINDOW(int bid) {
        buyerid = bid;
        initComponents();
        fillTableWithPropertyData();
        jTable1.setDefaultEditor(Object.class, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P_Id", "House_Name", "Category", "Size", "BHK", "Locality", "City", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setEditingColumn(0);
        jTable1.setEditingRow(0);
        jTable1.setGridColor(new java.awt.Color(51, 51, 51));
        jTable1.setUpdateSelectionOnSort(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Filter By");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Sort By");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category", "Size", "BHK", "Locality", "City", "State" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1)
                    .addComponent(jComboBox2))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String sort = jComboBox2.getSelectedItem().toString();
        String filter = jComboBox1.getSelectedItem().toString();
        PreparedStatement ps;
        ResultSet rs;
        P_PROPERTY property = new P_PROPERTY(0);
        ArrayList<P_PROPERTY> propertyList = property.filterProperty(filter, sort);
        
        String[] colNames = {"PID", "House_Name", "Category", "Size", "BHK", "Locality", "City", "State"};
        Object[][] rows = new Object[propertyList.size()][colNames.length];
        
        for(int i = 0; i < propertyList.size(); i++){
            
            rows[i][0] = propertyList.get(i).getPID();
            rows[i][1] = propertyList.get(i).getName();
            rows[i][2] = propertyList.get(i).getCategory();
            rows[i][3] = propertyList.get(i).getSize();
            rows[i][4] = propertyList.get(i).getBedrooms();
            rows[i][5] = propertyList.get(i).getLocality();
            rows[i][6] = propertyList.get(i).getCity();
            rows[i][7] = propertyList.get(i).getState();
            
        }
        DefaultTableModel model = new DefaultTableModel(rows,colNames);
        jTable1.setModel(model);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        String sort = jComboBox2.getSelectedItem().toString();
        String filter = jComboBox1.getSelectedItem().toString();
        PreparedStatement ps;
        ResultSet rs;
        P_PROPERTY property = new P_PROPERTY(0);
        ArrayList<P_PROPERTY> propertyList = property.filterProperty(filter, sort);
        
        String[] colNames = {"PID", "House_Name", "Category", "Size", "BHK", "Locality", "City", "State"};
        Object[][] rows = new Object[propertyList.size()][colNames.length];
        
        for(int i = 0; i < propertyList.size(); i++){
            
            rows[i][0] = propertyList.get(i).getPID();
            rows[i][1] = propertyList.get(i).getName();
            rows[i][2] = propertyList.get(i).getCategory();
            rows[i][3] = propertyList.get(i).getSize();
            rows[i][4] = propertyList.get(i).getBedrooms();
            rows[i][5] = propertyList.get(i).getLocality();
            rows[i][6] = propertyList.get(i).getCity();
            rows[i][7] = propertyList.get(i).getState();
            
        }
        DefaultTableModel model2 = new DefaultTableModel(rows,colNames);
        DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
        model1.setRowCount(0);
        
        //model1 = model;
        jTable1.setModel(model2);
        jTable1.revalidate();
        jTable1.setVisible(true);
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        int PID = (int)jTable1.getValueAt(row, 0);
        P_PROPERTY property = new P_PROPERTY(0);
        property = property.getPropertyByPID(PID);
        
        PreparedStatement ps;
        ResultSet rs1;
        String query1 = "SELECT View FROM Rating WHERE P_Id = ?;";
        String query2 = "UPDATE Rating SET View = ? WHERE P_Id = ?;";
        int View_Old = 0;
        int Views = 0;
        try{
            ps = THE_CONNECTION.getTheConnection().prepareStatement(query1);
            ps.setInt(1, PID);
            rs1 = ps.executeQuery();
            rs1.next();
            View_Old = rs1.getInt(1);
            Views = View_Old + 1;
            
            ps = THE_CONNECTION.getTheConnection().prepareStatement(query2);
            ps.setInt(1, Views);
            ps.setInt(2, PID);
            ps.executeUpdate();
        }catch(SQLException ex){
            Logger.getLogger(P_PROPERTY.class.getName()).log(Level.SEVERE, null, ex);
        }                                  
        System.out.println("Inside table of show prop:"+buyerid);
        BUYER_SHOW_PROPERTY_VIEW w = new BUYER_SHOW_PROPERTY_VIEW(buyerid,property);
        w.setVisible(true);
        w.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jTable1MouseClicked

    private void fillTableWithPropertyData(){
        P_PROPERTY property = new P_PROPERTY(0);
        ArrayList<P_PROPERTY> propertyList = property.propertiesListAll();
        
        String[] colNames = {"PID", "House_Name", "Category", "Size", "BHK", "Locality", "City", "State"};
        Object[][] rows = new Object[propertyList.size()][colNames.length];
        
        for(int i = 0; i < propertyList.size(); i++){
            
            rows[i][0] = propertyList.get(i).getPID();
            rows[i][1] = propertyList.get(i).getName();
            rows[i][2] = propertyList.get(i).getCategory();
            rows[i][3] = propertyList.get(i).getSize();
            rows[i][4] = propertyList.get(i).getBedrooms();
            rows[i][5] = propertyList.get(i).getLocality();
            rows[i][6] = propertyList.get(i).getCity();
            rows[i][7] = propertyList.get(i).getState();
            
        }
        DefaultTableModel model = new DefaultTableModel(rows,colNames);
        jTable1.setModel(model);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BUYER_SHOW_PROPERTIES_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BUYER_SHOW_PROPERTIES_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BUYER_SHOW_PROPERTIES_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BUYER_SHOW_PROPERTIES_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BUYER_SHOW_PROPERTIES_WINDOW(0).setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
